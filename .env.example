# Gatekeeper Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
PORT=8080
BACKEND_PORT=8080
FRONTEND_PORT=3000

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
POSTGRES_DB=gatekeeper
POSTGRES_USER=gatekeeper
POSTGRES_PASSWORD=change-this-secure-password
POSTGRES_PORT=5432

# Database connection pool settings
DB_MAX_OPEN_CONNS=25
DB_MAX_IDLE_CONNS=5
DB_CONN_MAX_LIFETIME_MINUTES=5
DB_CONN_MAX_IDLE_TIME_MINUTES=1

# Full database URL (alternative to individual settings above)
# DATABASE_URL=postgresql://gatekeeper:password@localhost:5432/gatekeeper?sslmode=disable

# =============================================================================
# JWT CONFIGURATION
# =============================================================================
# CRITICAL: Change this to a strong random secret in production
# Generate with: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-change-in-production-use-openssl-rand-base64-32
JWT_EXPIRY_HOURS=24

# =============================================================================
# ETHEREUM / BLOCKCHAIN CONFIGURATION
# =============================================================================
# Primary Ethereum RPC endpoint (required)
# Get a free API key from: https://www.alchemy.com/ or https://infura.io/
ETHEREUM_RPC=https://eth-mainnet.g.alchemy.com/v2/YOUR_API_KEY_HERE

# Fallback RPC endpoint (optional but recommended for production)
ETHEREUM_RPC_FALLBACK=https://mainnet.infura.io/v3/YOUR_INFURA_KEY

# Chain ID: 1=Ethereum Mainnet, 5=Goerli, 11155111=Sepolia, 137=Polygon
CHAIN_ID=1

# Blockchain cache TTL in seconds (default: 300 = 5 minutes)
CACHE_TTL=300

# RPC timeout in seconds (default: 5)
RPC_TIMEOUT=5

# =============================================================================
# REDIS CONFIGURATION (Optional - for future caching)
# =============================================================================
REDIS_PORT=6379
REDIS_URL=redis://redis:6379

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: debug, info, warn, error
LOG_LEVEL=info

# =============================================================================
# SIWE (Sign-In with Ethereum) CONFIGURATION
# =============================================================================
# Nonce TTL in minutes (default: 5)
NONCE_TTL_MINUTES=5

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
# API key creation rate limit per user per hour (default: 10)
API_KEY_CREATION_RATE_LIMIT=10
# API key creation burst limit (default: 3)
API_KEY_CREATION_BURST_LIMIT=3

# API usage rate limit per user per minute (default: 1000)
API_USAGE_RATE_LIMIT=1000
# API usage burst limit (default: 100)
API_USAGE_BURST_LIMIT=100

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
# Backend API URL for frontend to connect to
VITE_API_URL=http://localhost:8080

# WalletConnect Project ID (get from: https://cloud.walletconnect.com/)
# Required for WalletConnect v2 support
VITE_WALLETCONNECT_PROJECT_ID=your_walletconnect_project_id_here

# Chain ID for frontend (should match CHAIN_ID above)
VITE_CHAIN_ID=1

# Enable testnets in wallet connection UI (true/false)
VITE_ENABLE_TESTNETS=false

# =============================================================================
# DEVELOPMENT SETTINGS (optional)
# =============================================================================
# Environment mode: development, production
ENV=development
NODE_ENV=development

# Enable source maps in production (not recommended)
VITE_ENABLE_SOURCE_MAPS=false

# =============================================================================
# PRODUCTION DEPLOYMENT (optional)
# =============================================================================
# Domain for production deployment
# DOMAIN=gatekeeper.yourdomain.com

# SSL/TLS certificate paths (for production nginx/reverse proxy)
# SSL_CERT_PATH=/etc/ssl/certs/gatekeeper.crt
# SSL_KEY_PATH=/etc/ssl/private/gatekeeper.key

# CORS allowed origins (comma-separated)
# CORS_ALLOWED_ORIGINS=https://yourdomain.com,https://app.yourdomain.com

# =============================================================================
# SECURITY NOTES
# =============================================================================
# 1. NEVER commit .env files to git
# 2. Use strong random secrets for JWT_SECRET (min 32 bytes)
# 3. Use HTTPS in production (never HTTP)
# 4. Rotate secrets regularly
# 5. Use environment-specific .env files (.env.production, .env.staging)
# 6. Store production secrets in secure vaults (AWS Secrets Manager, HashiCorp Vault)
# 7. Enable firewall rules to restrict database/redis access
# 8. Use SSL/TLS for database connections in production (sslmode=require)

# =============================================================================
# QUICK START
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Update ETHEREUM_RPC with your API key
# 3. Update JWT_SECRET with: openssl rand -base64 32
# 4. Update POSTGRES_PASSWORD with a strong password
# 5. Update VITE_WALLETCONNECT_PROJECT_ID if using WalletConnect
# 6. Run: docker-compose up -d
